{"version":3,"file":"static/webpack/static/development/pages/index.js.55aad7680d942e52a47b.hot-update.js","sources":["webpack:///./sagas/index.js"],"sourcesContent":["import { call, put, takeLatest, select } from 'redux-saga/effects'\n\nexport const LOAD_BOX3 = 'LOAD_BOX3'\nexport const LOAD_BOX3_COMPLETE = 'LOAD_BOX3_COMPLETE'\n\nexport function* loadBox3() {\n    const addresses = yield call(window.ethereum.enable())\n    const myAddress = addresses[0];\n    yield put({\n        type: 'WEB3_LOADING'\n    })\n\n    // get my box and profile\n    const box = yield call(Box.openBox(myAddress, window.ethereum, {}))\n    const myProfile = yield call(Box.getProfile(myAddress))\n    yield call(new Promise((resolve, reject) => box.onSyncDone(resolve)))\n\n    // open 3chat space\n    // const chatSpace = await box.openSpace('3chat');\n    // const myDid = chatSpace.DID;\n\n    // // set all to state and continue\n    // const loggedIn = true\n    // this.setState({ chatSpace, box, myProfile, myAddress, myDid, loggedIn });\n\n\n    yield put({\n        type: LOAD_BOX3_COMPLETE,\n        payload: {\n            box, myProfile, myAddress\n        }\n    })\n}\n\nexport function* loadSpace() {\n    Box.getSpace(address, name, opts)\n}\n\n\nexport default function* () {\n    yield takeLatest(LOAD_BOX3, loadBox3)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;AA6BA;;;;;AAlCA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AACA;AAFA;AAGA;AACA;AADA;AACA;AAJA;AAAA;AAQA;AACA;AATA;AAQA;AARA;AASA;AACA;AAVA;AASA;AATA;AAUA;AAAA;AAAA;AACA;AAXA;AAAA;AAqBA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAFA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}
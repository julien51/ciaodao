{"version":3,"file":"static/webpack/static/development/pages/_app.js.41bbece90bfe17a1c3a9.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import Head from 'next/head'\nimport App, { Container } from 'next/app'\nimport React from 'react'\nimport withReduxStore from '../lib/with-redux-store'\nimport { Provider } from 'react-redux'\n\n\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { KebabChain } from '../components/wrapper/KebabChain'\nimport styled from 'styled-components'\nimport { persistStore } from 'redux-persist';\n\nconst ContainerStyled = styled.div`\n`\n\nclass MyApp extends App {\n  render () {\n    const { Component, pageProps, reduxStore } = this.props\n    const persistor = persistStore(reduxStore);\n    return <div>\n        <Head>\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            <meta charSet=\"utf-8\" />\n        </Head>\n            \n      <Container>\n      <style jsx global>{`\n          @import url('https://cdn.jsdelivr.net/npm/normalize.css@8.0.1/normalize.css');\n          @import url(https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/fontawesome.min.css);\n          @import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.css');\n          @import url('https://fonts.googleapis.com/css?family=Audiowide|Open+Sans&display=swap');\n            \n          body {\n              font-family: \"Helvetica Neue\", 'Open Sans', sans-serif;\n              \n              font-size: 14px;\n              margin: 0;\n              padding: 0;\n          }\n      `}</style>\n          <ContainerStyled>\n            <Provider store={reduxStore}>\n\n              <PersistGate loading={null} persistor={persistor}>\n                <Component {...pageProps} />\n              </PersistGate>\n\n              \n            </Provider>\n          </ContainerStyled>\n      </Container>\n    </div>\n  }\n}\n\nexport default withReduxStore(MyApp)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AArCA;AACA;AAuCA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/spaces.js.078159bad49778f32b7d.hot-update.js","sources":["webpack:///./components/spaces.js"],"sourcesContent":["import ContentLoader from \"react-content-loader\"\nimport styled from 'styled-components'\n\nconst MyLoader = () => (\n    <ContentLoader \n      height={160}\n      width={400}\n      speed={2}\n      primaryColor=\"#f3f3f3\"\n      secondaryColor=\"#ecebeb\"\n    >\n      <circle cx=\"10\" cy=\"20\" r=\"8\" /> \n      <rect x=\"25\" y=\"15\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" /> \n      <circle cx=\"10\" cy=\"50\" r=\"8\" /> \n      <rect x=\"25\" y=\"45\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" /> \n      <circle cx=\"10\" cy=\"80\" r=\"8\" /> \n      <rect x=\"25\" y=\"75\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" /> \n      <circle cx=\"10\" cy=\"110\" r=\"8\" /> \n      <rect x=\"25\" y=\"105\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n    </ContentLoader>\n)\n\n\nconst SpaceCard = styled.div`\nwidth: 18rem;\n`\nconst Space = ({ name, id }) => {\n    return <SpaceCard className=\"card\">\n  <img className=\"card-img-top\" src={null} alt=\"Card image cap\"/>\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">{name}</h5>\n    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n    <a href={`/spaces/${id}`} className=\"btn btn-dark\">Open group</a>\n  </div>\n</SpaceCard>\n}\n\nexport class Spaces extends React.Component {\n    render() {\n        const spaces = [\n            {\n                name: \"Foobar\",\n                id: \"0x\"\n            }\n        ]\n        return <div>\n            Below are all the groups. We've pulled some based on the tokens you have.\n            <MyLoader/>\n            {spaces.map(Space)}\n        </div>\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AACA;AAmBA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAbA;AACA;AADA;AAAA;;;;A","sourceRoot":""}
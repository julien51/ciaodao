{"version":3,"file":"static/webpack/static/development/pages/_app.js.e7f10d9ab84e8a22bf91.hot-update.js","sources":["webpack:///./components/wrapper/KebabChain.js"],"sourcesContent":["\n// import React, { Component } from 'react';\n// import {\n//   Switch,\n//   Route,\n//   withRouter\n// } from 'react-router-dom';\nimport Box from '3box';\n\nimport Cover from '../3box/Cover';\n\n\nimport React, { Component } from 'react'\n\n\n\nconst Box3Context = React.createContext({})\n\n\n\n\nexport class KebabChain extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        loggedIn: false,\n      box: {},\n      chatSpace: {},\n      myAddress: '',\n      myDid: '',\n      myProfile: {},\n      isAppReady: false,\n      topicList: [],\n      topicManager: {},\n      disableLogin: false,\n    };\n  }\n\n  componentDidMount() {\n    const { box } = this.state;\n\n    // if you haven't openedBox, return to login\n    this.setState({ isAppReady: true });\n    window.ethereum.enable()\n  }\n\n  handleLogin = async () => {\n    const { history } = this.props;\n    const addresses = await window.ethereum.enable();\n    const myAddress = addresses[0];\n    this.setState({ disableLogin: true });\n\n    // get my box and profile\n    const box = await Box.openBox(myAddress, window.ethereum, {});\n    const myProfile = await Box.getProfile(myAddress);\n    await new Promise((resolve, reject) => box.onSyncDone(resolve));\n\n    // open 3chat space\n    const chatSpace = await box.openSpace('3chat');\n    const myDid = chatSpace.DID;\n\n    // set all to state and continue\n    const loggedIn = true\n    this.setState({ chatSpace, box, myProfile, myAddress, myDid, loggedIn });\n  }\n\n\n  render() {\n    const {\n      isAppReady,\n      chatSpace,\n      topicManager,\n      topicList,\n      myProfile,\n      myAddress,\n      myDid,\n      disableLogin,\n      loggedIn\n    } = this.state;\n\n    const contextValue = {\n        myProfile,\n      myAddress,\n      myDid,\n    }\n\n    return (\n        <Box3Context.Provider value={contextValue}>\n            {this.props.children}\n        </Box3Context.Provider>\n    );\n  }\n}\n\n\nexport function with3Box(Child) {\n    return (props) => (\n        <Box3Context.Consumer>\n            {(props2) => <Child {...props} {...props2} />}\n        </Box3Context.Consumer>\n    )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAIA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AACA;AADA;AAQA;AARA;AAAA;AASA;AAAA;AACA;AAVA;AAAA;AAAA;AACA;AADA;AAYA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAFA;AAcA;AACA;AAhBA;AAAA;AAAA;AAiBA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAvBA;AAAA;AAAA;AA8CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAtEA;AACA;AADA;AAAA;AA0EA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;A","sourceRoot":""}
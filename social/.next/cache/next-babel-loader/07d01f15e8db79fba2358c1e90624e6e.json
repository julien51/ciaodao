{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nexport function isLoggedIn(state) {\n  return state.user.loggedInUserId !== null;\n}\nexport function getUsersAvailable(state) {\n  return _Object$values(state.users).map(function (_ref) {\n    var username = _ref.username,\n        id = _ref.id;\n    return {\n      username: username,\n      id: id\n    };\n  }); // TODO\n}\nexport function getUserById(state, id) {\n  return state.users[id];\n}\nexport function getUser(state, username) {\n  for (var _i = 0, _Object$values2 = _Object$values(state.users); _i < _Object$values2.length; _i++) {\n    var user = _Object$values2[_i];\n    if (user.username == username) return user;\n  }\n\n  return null;\n}\nexport function loggedInUser(state) {\n  var userId = state.user.loggedInUserId;\n\n  if (userId == null) {\n    return {\n      reputation: 1,\n      registered: null,\n      posts: [],\n      votes: [],\n      username: \"()\",\n      userId: userId\n    };\n  }\n\n  var user = state.users[userId];\n  return user;\n}","map":{"version":3,"sources":["/Users/liamz/Documents/open-source/everest/social/selectors/index.js"],"names":["isLoggedIn","state","user","loggedInUserId","getUsersAvailable","users","map","username","id","getUserById","getUser","loggedInUser","userId","reputation","registered","posts","votes"],"mappings":";AAAA,OAAO,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AAC9B,SAAOA,KAAK,CAACC,IAAN,CAAWC,cAAX,KAA8B,IAArC;AACH;AAED,OAAO,SAASC,iBAAT,CAA2BH,KAA3B,EAAkC;AACrC,SAAO,eAAcA,KAAK,CAACI,KAApB,EAA2BC,GAA3B,CAA+B,gBAAsB;AAAA,QAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,QAATC,EAAS,QAATA,EAAS;AACxD,WAAO;AAAED,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,EAAE,EAAFA;AAAZ,KAAP;AACH,GAFM,CAAP,CADqC,CAIrC;AACH;AAED,OAAO,SAASC,WAAT,CAAqBR,KAArB,EAA4BO,EAA5B,EAAgC;AACnC,SAAOP,KAAK,CAACI,KAAN,CAAYG,EAAZ,CAAP;AACH;AAED,OAAO,SAASE,OAAT,CAAiBT,KAAjB,EAAwBM,QAAxB,EAAkC;AACrC,qCAAgB,eAAcN,KAAK,CAACI,KAApB,CAAhB,qCAA4C;AAAxC,QAAIH,IAAI,sBAAR;AACA,QAAGA,IAAI,CAACK,QAAL,IAAiBA,QAApB,EAA8B,OAAOL,IAAP;AACjC;;AACD,SAAO,IAAP;AACH;AAED,OAAO,SAASS,YAAT,CAAsBV,KAAtB,EAA6B;AAChC,MAAIW,MAAM,GAAGX,KAAK,CAACC,IAAN,CAAWC,cAAxB;;AACA,MAAGS,MAAM,IAAI,IAAb,EAAmB;AACf,WAAO;AACHC,MAAAA,UAAU,EAAE,CADT;AAEHC,MAAAA,UAAU,EAAE,IAFT;AAGHC,MAAAA,KAAK,EAAE,EAHJ;AAIHC,MAAAA,KAAK,EAAE,EAJJ;AAKHT,MAAAA,QAAQ,EAAE,IALP;AAMHK,MAAAA,MAAM,EAANA;AANG,KAAP;AAQH;;AAED,MAAIV,IAAI,GAAGD,KAAK,CAACI,KAAN,CAAYO,MAAZ,CAAX;AACA,SAAOV,IAAP;AACH","sourcesContent":["export function isLoggedIn(state) {\n    return state.user.loggedInUserId !== null\n}\n\nexport function getUsersAvailable(state) {\n    return Object.values(state.users).map(({ username, id }) => {\n        return { username, id }\n    }); \n    // TODO\n}\n\nexport function getUserById(state, id) {\n    return state.users[id]\n}\n\nexport function getUser(state, username) {\n    for(let user of Object.values(state.users)) {\n        if(user.username == username) return user;\n    }\n    return null\n}\n\nexport function loggedInUser(state) {\n    let userId = state.user.loggedInUserId\n    if(userId == null) {\n        return {\n            reputation: 1,\n            registered: null,\n            posts: [],\n            votes: [],\n            username: \"()\",\n            userId,\n        }\n    }\n\n    let user = state.users[userId]\n    return user\n}"]},"metadata":{},"sourceType":"module"}
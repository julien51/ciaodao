{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport sagas from '../sagas';\nvar persistConfig = {\n  key: 'root',\n  storage: storage\n};\nvar sagaMiddleware = createSagaMiddleware();\nvar composeEnhancers = composeWithDevTools({});\nvar initialState = {};\nexport function configureStore(options) {\n  var middleware = [sagaMiddleware, thunk];\n  var store = createStore(rootReducer, initialState, composeEnhancers(applyMiddleware.apply(void 0, middleware)));\n  sagaMiddleware.run(sagas);\n  return store;\n}","map":{"version":3,"sources":["/Users/liamz/Documents/open-source/everest/social/store/index.js"],"names":["createStore","applyMiddleware","compose","combineReducers","rootReducer","thunk","composeWithDevTools","createSagaMiddleware","persistStore","persistReducer","storage","sagas","persistConfig","key","sagaMiddleware","composeEnhancers","initialState","configureStore","options","middleware","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBH,EAAAA,OAAO,EAAPA;AAFkB,CAAtB;AAKA,IAAMI,cAAc,GAAGP,oBAAoB,EAA3C;AACA,IAAMQ,gBAAgB,GAAGT,mBAAmB,CAAC,EAAD,CAA5C;AAGA,IAAMU,YAAY,GAAG,EAArB;AAGA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACpC,MAAMC,UAAU,GAAG,CACfL,cADe,EAEfT,KAFe,CAAnB;AAIA,MAAMe,KAAK,GAAGpB,WAAW,CACrBI,WADqB,EAErBY,YAFqB,EAGrBD,gBAAgB,CACZd,eAAe,MAAf,SAAmBkB,UAAnB,CADY,CAHK,CAAzB;AAOAL,EAAAA,cAAc,CAACO,GAAf,CAAmBV,KAAnB;AAEA,SAAOS,KAAP;AACH","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport sagas from '../sagas'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst sagaMiddleware = createSagaMiddleware()\nconst composeEnhancers = composeWithDevTools({\n});\n\nconst initialState = {\n}\n\nexport function configureStore(options) {\n    const middleware = [\n        sagaMiddleware,\n        thunk,\n    ]\n    const store = createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(\n            applyMiddleware(...middleware),\n        )\n    )\n    sagaMiddleware.run(sagas)\n\n    return store\n}\n"]},"metadata":{},"sourceType":"module"}